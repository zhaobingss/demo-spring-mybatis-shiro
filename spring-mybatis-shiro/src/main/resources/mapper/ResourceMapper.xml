<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zbss.entity.ResourceMapper" >
  <resultMap id="BaseResultMap" type="com.zbss.entity.Resource" >
    <id column="resource_id" property="resourceId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="resource_name" property="resourceName" jdbcType="VARCHAR" />
    <result column="resource_url" property="resourceUrl" jdbcType="VARCHAR" />
    <result column="resource_type" property="resourceType" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    resource_id, role_id, resource_name, resource_url, resource_type, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_resource
    where resource_id = #{resourceId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_resource
    where resource_id = #{resourceId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zbss.entity.Resource" >
    insert into t_resource (resource_id, role_id, resource_name, 
      resource_url, resource_type, create_time, 
      update_time)
    values (#{resourceId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{resourceName,jdbcType=VARCHAR}, 
      #{resourceUrl,jdbcType=VARCHAR}, #{resourceType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zbss.entity.Resource" >
    insert into t_resource
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="resourceId != null" >
        resource_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="resourceName != null" >
        resource_name,
      </if>
      <if test="resourceUrl != null" >
        resource_url,
      </if>
      <if test="resourceType != null" >
        resource_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="resourceId != null" >
        #{resourceId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="resourceName != null" >
        #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="resourceUrl != null" >
        #{resourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null" >
        #{resourceType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zbss.entity.Resource" >
    update t_resource
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="resourceName != null" >
        resource_name = #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="resourceUrl != null" >
        resource_url = #{resourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null" >
        resource_type = #{resourceType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where resource_id = #{resourceId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zbss.entity.Resource" >
    update t_resource
    set role_id = #{roleId,jdbcType=INTEGER},
      resource_name = #{resourceName,jdbcType=VARCHAR},
      resource_url = #{resourceUrl,jdbcType=VARCHAR},
      resource_type = #{resourceType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where resource_id = #{resourceId,jdbcType=INTEGER}
  </update>
</mapper>